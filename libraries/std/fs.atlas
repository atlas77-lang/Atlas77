public class File {
    private:
        flag: i64;
        content: str;
        path: str;
    public:
        func create() -> File {
            return new File {
                flag: 0,
                content: None,
                path: "",
            };
        }
        func read(path: str) -> File {
            let file: Self = File::create();
            file.path = path;
            file.content = Some(read_file(path));
            return file;
        }
        func write(&self, content: str) {
            write_file(self.path, content);
        }
        func remove(&self) {
            remove_file(self.path);
        }
        func exists(&self) -> bool {
            return file_exists(self.path);
        }
        func read_dir(path: str) -> [str] {
            return read_dir(path);
        }
        func read_file(path: str) -> str {
            return read_file(path);
        }
}

extern read_dir(path: str) -> [str];
extern read_file(path: str) -> str;
extern write_file(path: str, content: str);
extern remove_file(path: str);
extern file_exists(path: str) -> bool;