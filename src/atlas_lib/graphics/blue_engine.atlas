public extern triangle(name: str, settings: ObjectSettings, renderer: Renderer, objects: ObjectStorage) -> unit
public extern new_object(name: str, vertices: [Vertex], indices: [uint64], settings: ObjectSettings, renderer: Renderer)

public class ObjectSettings {}

public class Engine {
    public:
        renderer: Renderer;
        objects:
    public:
        Engine() {

        }
        ~Engine() {}
}
public class Object {}

public class Renderer {

}

// Singleton of the ObjectStorage in blue_engine
public class ObjectStorage {
    public:
        func new_object(name: str, vertices: [Vertex], indices: [uint64], settings: ObjectSettings, renderer: Renderer) {
            new_object(name, vertices, indices, settings, renderer);
        }
        func add_object()
}

public class Vector3 {
    public:
        x: f64;
        y: f64;
        z: f64;
    public:
        Vector3(x: f64, y: f64, z: f64) {
            self.x = x;
            self.y = y;
            self.z = z;
        }
        ~Vector3() {}
}

public class Vector2 {
    public:
        x: f64;
        y: f64;
    public:
        Vector2(x: f64, y: f64) {
            self.x = x;
            self.y = y;
        }
        ~Vector2() {}
}

public class Vertex {
    public:
        position: Vector3;
        uv: Vector2;
        normal: Vector3;
    public:
        Vertex(position: Vector3, color: Vector3) {
            self.position = position;
            self.color = color;
        }
        ~Vertex() {}
}
