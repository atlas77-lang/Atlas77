extern read_dir(path: str) -> [str]
extern read_file(path: str) -> str
extern write_file(path: str, content: str) -> unit
extern remove_file(path: str) -> unit
extern file_exists(path: str) -> bool

public class File {
    private:
        content: str;
    public:
        path: str;
    public:
        File(path: str) {
            self.content = "";
            self.path = path;
        }
        // destructor
        ~File() {}
        func read(path: str) -> File {
            let file: File = new File();
            file.path = path;
            file.content = read_file(path);
            return file;
        }
        func open(self) {
            self.content = read_file(self.path);
            return;
        }
        func close(self) {
            write_file(self.path, self.content);
            return;
        }
        func write(self, content: str) {
            write_file(self.path, content);
            return;
        }
        func remove(self) {
            remove_file(self.path);
            return;
        }
        func exists(self) -> bool {
            return file_exists(self.path);
        }
        func read_dir(path: str) -> [str] {
            return read_dir(path);
        }
        func read_file(path: str) -> str {
            return read_file(path);
        }
}

